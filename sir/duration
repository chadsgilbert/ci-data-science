#!/usr/bin/env python

"""
Plot the duration of an epidemic.
"""

import argparse
import h5py
from read_from_file import dataset_map


def _duration(h5file, output_filename, beta, gamma):
    """
    Duration of each situation.

    FIXME: this function uses a hard-coded maximum time.

    The range check has to start at 1 rather than zero because python evaluates
    "0.01 < 0.01" as true. At time zero that is always true. It is okay to skip
    time = 0 anyway, so no problem.
    """
    def get_duration(dataset):
        infected = dataset['infected']
        index = next((i for i in range(1, 365) if infected[i] < 0.01))
        if index:
            return dataset['time'][index]
        return dataset['time'][-1]

    dataset_map(h5file, output_filename, beta, gamma, get_duration)


def duration():
    """
    Get the duration of all the batches.
    """
    desc = "Get the duration of an epidemic"
    parser = argparse.ArgumentParser(description=desc)
    parser.add_argument('filename')
    parser.add_argument('output_filename')
    parser.add_argument('--beta', default=range(10, 100, 10), type=list)
    parser.add_argument('--gamma', default=range(10, 100, 10), type=list)
    args = parser.parse_args()
    with h5py.File(args.filename, 'r') as h5file:
        _duration(h5file, args.output_filename, args.beta, args.gamma)


if __name__ == "__main__":
    duration()
